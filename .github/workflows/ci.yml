name: CI (build, test, docker build)

on:
  push:
    branches: ["**"]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  backend-dotnet:
    name: .NET build & tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj', '**/packages.lock.json') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore
        run: dotnet restore ../verisys.sln

      - name: Build (Release)
        run: dotnet build ../verisys.sln -c Release --no-restore

      - name: Test (Unit)
        if: ${{ hashFiles('Verisys.Api.UnitTests/*.csproj') != '' }}
        run: dotnet test Verisys.Api.UnitTests -c Release --no-build \
          --logger "trx;LogFileName=unit.trx" \
          --results-directory ./TestResults/Unit

      - name: Test (Integration)
        if: ${{ hashFiles('Verisys.Api.IntegrationTests/*.csproj') != '' }}
        run: dotnet test Verisys.Api.IntegrationTests -c Release --no-build \
          --logger "trx;LogFileName=integration.trx" \
          --results-directory ./TestResults/Integration
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-test-results
          path: |
            api/**/TestResults/*.trx
          if-no-files-found: ignore

  frontend-vue:
    name: Vue build & (optional) tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web/verisys-web
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            web/verisys-web/package-lock.json
            package-lock.json

      - name: Install deps
        run: npm ci

      - name: Lint (if script exists)
        run: npm run lint --if-present

      - name: Unit tests (if script exists)
        run: npm test --if-present

      - name: Build
        run: npm run build

      - name: Upload built frontend (artifact)
        if: ${{ hashFiles('dist/**') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: web/verisys-web/dist
          if-no-files-found: ignore

  docker-build:
    name: Docker build (no push)
    runs-on: ubuntu-latest
    needs: [backend-dotnet, frontend-vue]
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # --- FRONTEND IMAGE (web/verisys-web/Dockerfile) ---
      - name: Build WEB image
        if: ${{ hashFiles('web/verisys-web/Dockerfile') != '' }}
        uses: docker/build-push-action@v6
        with:
          context: ./web/verisys-web
          file: ./web/verisys-web/Dockerfile
          push: false
          tags: verisys-web:ci

      # --- BACKEND IMAGE ---
      # Using ROOT Dockerfile as you have one at repo root
      - name: Build API image (root Dockerfile)
        if: ${{ hashFiles('Dockerfile') != '' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: verisys-api:ci
