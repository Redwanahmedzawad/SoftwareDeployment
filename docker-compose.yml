services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: verisys
      POSTGRES_PASSWORD: verisys123
      POSTGRES_DB: verisysdb
    ports:
      - "5432:5432"
    volumes:
      - verisys-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U verisys -d verisysdb"]
      interval: 5s
      timeout: 3s
      retries: 10

  app:
    # Uses your existing root Dockerfile
    build:
      context: .           # repo root
      dockerfile: Dockerfile
    container_name: verisys-app
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      # API uses Docker network hostname 'db'
      ConnectionStrings__Default: "Host=viresysdb.postgres.database.azure.com;Database=viresysdb;Username=waliprotick;Password=Helloworld123$;Ssl Mode=Require"
      # Optional: bind Kestrel to 8080
      ASPNETCORE_URLS: "http://+:8080"
    ports:
      - "8080:8080"

  frontend:
    build:
      context: ./web/verisys-web
      dockerfile: Dockerfile
    container_name: verisys-frontend
    depends_on:
      - app
    environment:
      # Inside Docker, talk to the API via its service name
      VITE_API_URL: http://app:8080
    # Expose Vite dev server
    ports:
      - "5173:5173"
    # Ensure Vite binds to all interfaces in the container
    command: ["npm","run","dev","--","--host","0.0.0.0"]

volumes:
  verisys-data:
